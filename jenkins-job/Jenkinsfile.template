@Library("shared-lib@master") _

pipeline {
    triggers {
        cron('0 0 * * *') // everyday at midnight
    }
    environment {
        DEBIAN_FRONTEND = 'noninteractive'
        TZ = 'Europe/Istanbul'
    } 
    agent {
        node {
            label 'linux'
        }
    }
    stages {
        stage('Backup and Upload to S3') {
            steps {
                script {
                    echo "Starting backup and upload to S3..."
                    KeycloakBackupAndUploadToS3(
                        kubeconfig_credentials_id: '',              // Jenkins Credentials Name for the kubeconfig
                        cluster_name: "",                           // Your cluster name (used in the S3 backup folder hierarchy)
                        label_app_kubernetes_io_instance: "",       // Keycloak `app.kubernetes.io=` label value on the Keycloak pods
                        keycloak_namespace: "",                     // k8s namespace   

                        k8s_plugin_cloud_name: "",                  // `Jenkins:Kubernetes plugin` Cloud name for cluster access (Manage Jenkins -> Cloud )   

                        aws_access_key_id_credential_id: "",        // Jenkins Credentials Name for the AWS Access Key
                        aws_secret_access_key_credential_id: "",    // Jenkins Credentials Name for the AWS Secret  Access Key
                        aws_endpoint_url_s3: false,                 // (optional) S3 compatible storage endpoint (e.g. Huawei Cloud OBS: `https://obs.tr-west-1.myhuaweicloud.com`)
                        s3_bucket_name: "",                         // S3 Bucket Name for the backups
                    )
                    echo "Finished backup and upload to S3..."
                }
            }
        }
    }
    post {
        always {
            cleanWs() // always Clean Workspace after 
        }
    }
    options {
        disableConcurrentBuilds()
        buildDiscarder(logRotator(numToKeepStr: '30'))  // keep last N builds
        timeout(time: 45, unit: 'MINUTES') 
    }
}